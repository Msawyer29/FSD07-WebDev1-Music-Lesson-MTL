2023/03/27 Mackenzie
1. Done / not done since last scrum:
- Installed Docker Desktop app and Laravel + Laravel Breeze
- created database "laravel-breeze"

2. To do until next Scrum:
- finish setup of the initial laravel project
    - sync .env file in project with myphpadmin database music_lessons OR switch to db laravel-breeze
- review and edit the laravel user login php files, add custom text where needed, edit to music lesson format

3. Need assistance / figure things out
- learn how to change registration form and users table using php terminal commands


2023/03/28 Mackenzie
1. Done / not done since last scrum:
- Install Blade for Laravel - was missing packages which was causing errors
- Updated Registration form and users table, changed Name to firstname and lastname fields
- add more fields to table using PHP commands in terminal

2. To do until next Scrum:
- test and debug Delara registration form updates. New fields: debug phone and email showing error as required field even when filled out.
- test insert registration form data insert into database
- begin designing and implementing the calendar to book lessons. Two routes, student view availability, teacher set availability

3. Need assistance / figure things out
- best method to install calendar, two specific types: teacher calendar and student calendar

2023/03/28 Delara
1. Done / not done since last scrum:
- Updated registration form to include: phoneno, address
- Updated users table to inlclude new fields

2. To do until next Scrum:
- Focus on designing routes for role: student/teacher (select on registration form: radio button/dropbox)
- if selecting Teacher --> input to form teacherPricePerHour, teacherProfileInfo
- Design separate route for admin login

3. Need assistance / figure things out
- verify if PHP 8.0 will work with laravel 9.5.2


2023/03/29 Mackenzie
1. Done / not done since last scrum:
- Create lessons table
- Create Calendar but need to implement use for Users as single table NOT teacher and student separate

2. To do until next Scrum:
- In lesson table properly format foreign keys teacherId and studentId to link to id in user table
- create cpanel domain for project

3. Need assistance / figure things out:
- link teacherId and studentID as foreign keys to user table
- figure out how to implement Google Analytics

2023/03/29 Delara
1. Done / not done since last scrum:
- Completed updating user table and registration forms
- Login and dashboard setup for student, teacher and admin

2. To do until next Scrum:
- Downgrade project, laravel/framework to 9.5.2 + php 8.0

3. Need assistance / figure things out
- verify if PHP 8.0 will work with laravel 9.5.2


2023/03/30 Mackenzie
1. Done / not done since last scrum:
- Done: updated entire project (with downgraged php), pulled all new changes and encountered a vite.config.js exception error which caused many hours of delays.
- I deleted node_modules as I thought we were not allowed to use npm becasue it was used with vue/react and this crashed my project
- Tried to work without it but I had to reinstal node_modules and install npm ('npm run dev' in terminal must be used for project to work)
- local host project is back live/functioning and successfully linked to database
- Not Done: calendar
2. To do until next Scrum:
- finish calendar
- troubleshoot user profile update/save information (email works, name does not + add phone number and address fields for all users)
3. Need assistance / figure things out:

2023/03/30 Delara
1. Done / not done since last scrum:
- setup cpanel domain hosting (musiclessonmtl.fsd07.com)
- deploy laravel on shared hosting
- linked database with shared hosting
2. To do until next Scrum:
- separate html from php and create layout for all pages
- if time, implement cart/payment API
3. Need assistance / figure things out:


2023/03/31 Mackenzie
1. Done / not done since last scrum:
- Done: fullcalendar js implementation, /calendar route, linked calendar to database User and Lesson tables, LessonController.php and Lesson.php model added
- Not Done: tried to implement pop up form after selecting time slot on calendar, decided it is not the best design for user
- Done: added "Book Now" button, not done: book now button routes to /booklesson where user fills out form
2. To do until next Scrum:
- Link book now button to direct user to /booklesson route where they fill out form to book lesson
- When user clicks Book Now button after calendar timeslot selection, the startDateTime is saved (doesn't appear on form/auto fill)
- Book Lesson form saves lesson to database
- When viewing the calendar after successful book form submission, should see a lesson is stored
3. Need assistance / figure things out:
- Figure out design of user experience on domain for student. dashboard - what should be on it? direct user to pay for booked lessons on dashboard /payment route implement to payment API
- Dashboard: upcoming lessons view, paid lessons, unpaid lessons, link to view teachers and message teacher button (/message route) 
- Review github pull and use with teacher, we made new repository for downgraded project

2023/03/31 Delara
1. Done / not done since last scrum:
- setup Email verification and rest password , finding new bug (conflict between redrict email and customize dashboard) => back to ex Endpoint
2. To do until next Scrum:
- debuging redirect or finding new way to solve this problem
3. Need assistance / figure things out:
- need consulation


2023/04/01 Mackenzie
1. Done / not done since last scrum:
- Redesigned student user experience when booking a lesson. No more calendar view.
- Implemented successful Book Lesson view with calendar. Successfuly books new lesson and logs to database with input fields formatted corrwectly
- Implemented new routes, upon successful book lesson submission student is redirected back to dashboard and displayed a success message
- Dashboard greeting changed from "You are logged in as Student!" to personalised greeting:
{{ __('Hello ') }}{{ Auth::user()->firstname }},{{ __(" you're logged in as a ") }}{{ Auth::user()->role }}{{ __('.') }} 
2. To do until next Scrum:
- On dashboard display upcoming booked lessons to student
3. Need assistance / figure things out:
- Figure out constarint so that when booking a lesson student can not select a timeslot before current DateTime

2023/04/01 Delara
1. Done / not done since last scrum:
- debuging redirect or finding new way to solve this problem, work on messenger system , create table (model, view, controller)
Connection with Database and redirect (view)
2. To do until next Scrum:
- customize messenger , try to implement index , work on show method
3. Need assistance / figure things out:
- implementation messenger (how can have separate query for fetch data for different role )


2023/04/02 Mackenzie
1. Done / not done since last scrum:
DONE 
- On student dashboard display upcoming booked lessons to student, loads lessons with all teachers from lessons table
- Student can not book a new lesson that is < current DateTime, student can only book monday - friday
- Student can select a teacher and calendar updates so student can view their available lesson spots and booked/unavailable spots when booking new lesson on calendar in /booklesson view.
- Student selects teacher to view availability in calendar, now there is a check conflict to see if the available timeslot with one teacher, conflicts with a lesson the student already has booked with another teacher
- Update booked lesson timeslot format to "9:00 - 10:00" red background
2. To do until next Scrum:
- Format student dashboard calendar
- On student dashboard include table with unpaid lessons
- add link to "pay now" for unpaid lessons
- Begin work on payment API implementation
3. Need assistance / figure things out:
- Figure out payment API application, possibly consult with Gregory on 4/3

2023/04/02‌ Delara
1. Done / not done since last scrum:
- Creating a messenger system 
- changing the path to using the Laravel Messenger package, creating a controller and root and view 
- creating a messenger to send message from students to professors and vice versa, the possibility of replying and deleting and having inbox 
2. To do until next Scrum:
- Working on Admin dashboard 
3. Need assistance / figure things out:


2023/04/03 Mackenzie
1. Done / not done since last scrum:
- Create PaymentController.php, lessonmanager.blade.php, payment.blade.php
- Lessonmanager.blade.php shows table where lessons are unpaid with button to initiate payment process
- payment.blade.php uses stripe api, student enters credit card and submit
- Implement Stripe Payment API, setup Stripe in .env
- create payment routes in web.php
2. To do until next Scrum:
- Debugg error submnitting payment form, error says GET method not allowed only POST, and I am using POST for all routes where needed
- Working on Admin dashboard & Teacher dashboard
3. Need assistance / figure things out:
-  May have to move view all unpaid lessons table on view /lessonmanager to /payment view so that the upaid lessons table is on the same page as the stripe api payment form to submit payment
- continue debugging payment flow/process find solution ASAP and move on to other parts of project

2023/04/0‌3 Delara
1. Done / not done since last scrum:
- trying to find a way to fix problem after merge/ test pull and push
- create messageController and messenger folder and their style  
2. To do until next Scrum:
- Working on Admin dashboard 
3. Need assistance / figure things out:
- working with git repository, notepad++ and source tree